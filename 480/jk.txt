// All have been visited
        /*
        xx = loc.x + 1;
        yy = loc.y;
        if (xx < 8) {
            if (kb[xx][yy].safe && current.lastVisited.x != xx && current.lastVisited.y != yy) {
                return new TrinhLocation(xx,yy);
            }
        }
        
        xx = loc.x;
        yy = loc.y + 1;
            
        if (yy < 8) {
            if (kb[xx][yy].safe && current.lastVisited.x != xx && current.lastVisited.y != yy) {
                return new TrinhLocation(xx,yy);
            }  
        }
            
        xx = loc.x;
        yy = loc.y - 1;
            
        if (yy >= 0) {
            if (kb[xx][yy].safe && current.lastVisited.x != xx && current.lastVisited.y != yy) {
                return new TrinhLocation(xx,yy);
            }  
        }
            
        xx = loc.x - 1;
        yy = loc.y;
            
        if (xx >= 0) {
            if (kb[xx][yy].safe && current.lastVisited.x != xx && current.lastVisited.y != yy) {
                return new TrinhLocation(xx,yy);
            }               
        }
        
        System.out.println("ALL safes exhausted");
        // ----- If all safes are exhausted, must be possible pits nearby
        xx = loc.x + 1;
        yy = loc.y;
        if (xx < 8) {
            if (kb[xx][yy].possiblepit && kb[xx][yy].visited) {
                return new TrinhLocation(xx,yy);
            }
        }
        
        xx = loc.x;
        yy = loc.y + 1;
            
        if (yy < 8) {
            if (kb[xx][yy].possiblepit && kb[xx][yy].visited) {
                return new TrinhLocation(xx,yy);
            }
        }
            
        xx = loc.x;
        yy = loc.y - 1;
            
        if (yy >= 0) {
            if (kb[xx][yy].possiblepit && kb[xx][yy].visited) {
                return new TrinhLocation(xx,yy);
            } 
        }
            
        xx = loc.x - 1;
        yy = loc.y;
            
        if (xx >= 0) {
            if (kb[xx][yy].possiblepit && kb[xx][yy].visited) {
                return new TrinhLocation(xx,yy);
            }            
        }
        
        xx = loc.x - 1;
        yy = loc.y;
            
        if (xx >= 0) {
            return new TrinhLocation(xx, yy);
        }
        
        xx = loc.x + 1;
        yy = loc.y;
        if (xx < 8) {
            return new TrinhLocation(xx, yy);
        }
        
        xx = loc.x;
        yy = loc.y + 1;
            
        if (yy < 8) {
            return new TrinhLocation(xx, yy);
        }
            
        xx = loc.x;
        yy = loc.y - 1;
        */    

            
       
        